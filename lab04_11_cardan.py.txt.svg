<svg height="14939.3046875" version="1.1" width="731.484375" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="overflow: hidden; position: relative;" viewBox="0 0 731.484375 14939.3046875" preserveAspectRatio="xMidYMid meet"><desc style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">Created with RaphaÃ«l 2.1.4</desc><defs style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><marker id="raphael-marker-endblock33-obj39" markerHeight="3" markerWidth="3" orient="auto" refX="1.5" refY="1.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><use xlink:href="#raphael-marker-block" transform="rotate(180 1.5 1.5) scale(0.6,0.6)" stroke-width="1.6667" fill="black" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></use></marker><marker id="raphael-marker-endblock33-obj40" markerHeight="3" markerWidth="3" orient="auto" refX="1.5" refY="1.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><use xlink:href="#raphael-marker-block" transform="rotate(180 1.5 1.5) scale(0.6,0.6)" stroke-width="1.6667" fill="black" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></use></marker><marker id="raphael-marker-endblock33-obj41" markerHeight="3" markerWidth="3" orient="auto" refX="1.5" refY="1.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><use xlink:href="#raphael-marker-block" transform="rotate(180 1.5 1.5) scale(0.6,0.6)" stroke-width="1.6667" fill="black" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></use></marker><marker id="raphael-marker-endblock33-obj42" markerHeight="3" markerWidth="3" orient="auto" refX="1.5" refY="1.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><use xlink:href="#raphael-marker-block" transform="rotate(180 1.5 1.5) scale(0.6,0.6)" stroke-width="1.6667" fill="black" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></use></marker><marker id="raphael-marker-endblock33-obj43" markerHeight="3" markerWidth="3" orient="auto" refX="1.5" refY="1.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><use xlink:href="#raphael-marker-block" transform="rotate(180 1.5 1.5) scale(0.6,0.6)" stroke-width="1.6667" fill="black" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></use></marker><marker id="raphael-marker-endblock33-obj44" markerHeight="3" markerWidth="3" orient="auto" refX="1.5" refY="1.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><use xlink:href="#raphael-marker-block" transform="rotate(180 1.5 1.5) scale(0.6,0.6)" stroke-width="1.6667" fill="black" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></use></marker><marker id="raphael-marker-endblock33-obj45" markerHeight="3" markerWidth="3" orient="auto" refX="1.5" refY="1.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><use xlink:href="#raphael-marker-block" transform="rotate(180 1.5 1.5) scale(0.6,0.6)" stroke-width="1.6667" fill="black" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></use></marker><marker id="raphael-marker-endblock33-obj46" markerHeight="3" markerWidth="3" orient="auto" refX="1.5" refY="1.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><use xlink:href="#raphael-marker-block" transform="rotate(180 1.5 1.5) scale(0.6,0.6)" stroke-width="1.6667" fill="black" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></use></marker><marker id="raphael-marker-endblock33-obj47" markerHeight="3" markerWidth="3" orient="auto" refX="1.5" refY="1.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><use xlink:href="#raphael-marker-block" transform="rotate(180 1.5 1.5) scale(0.6,0.6)" stroke-width="1.6667" fill="black" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></use></marker><marker id="raphael-marker-endblock33-obj48" markerHeight="3" markerWidth="3" orient="auto" refX="1.5" refY="1.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><use xlink:href="#raphael-marker-block" transform="rotate(180 1.5 1.5) scale(0.6,0.6)" stroke-width="1.6667" fill="black" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></use></marker><marker id="raphael-marker-endblock33-obj49" markerHeight="3" markerWidth="3" orient="auto" refX="1.5" refY="1.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><use xlink:href="#raphael-marker-block" transform="rotate(180 1.5 1.5) scale(0.6,0.6)" stroke-width="1.6667" fill="black" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></use></marker><marker id="raphael-marker-endblock33-obj50" markerHeight="3" markerWidth="3" orient="auto" refX="1.5" refY="1.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><use xlink:href="#raphael-marker-block" transform="rotate(180 1.5 1.5) scale(0.6,0.6)" stroke-width="1.6667" fill="black" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></use></marker><marker id="raphael-marker-endblock33-obj51" markerHeight="3" markerWidth="3" orient="auto" refX="1.5" refY="1.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><use xlink:href="#raphael-marker-block" transform="rotate(180 1.5 1.5) scale(0.6,0.6)" stroke-width="1.6667" fill="black" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></use></marker><marker id="raphael-marker-endblock33-obj52" markerHeight="3" markerWidth="3" orient="auto" refX="1.5" refY="1.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><use xlink:href="#raphael-marker-block" transform="rotate(180 1.5 1.5) scale(0.6,0.6)" stroke-width="1.6667" fill="black" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></use></marker><marker id="raphael-marker-endblock33-obj53" markerHeight="3" markerWidth="3" orient="auto" refX="1.5" refY="1.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><use xlink:href="#raphael-marker-block" transform="rotate(180 1.5 1.5) scale(0.6,0.6)" stroke-width="1.6667" fill="black" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></use></marker><marker id="raphael-marker-endblock33-obj54" markerHeight="3" markerWidth="3" orient="auto" refX="1.5" refY="1.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><use xlink:href="#raphael-marker-block" transform="rotate(180 1.5 1.5) scale(0.6,0.6)" stroke-width="1.6667" fill="black" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></use></marker><marker id="raphael-marker-endblock33-obj55" markerHeight="3" markerWidth="3" orient="auto" refX="1.5" refY="1.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><use xlink:href="#raphael-marker-block" transform="rotate(180 1.5 1.5) scale(0.6,0.6)" stroke-width="1.6667" fill="black" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></use></marker><marker id="raphael-marker-endblock33-obj56" markerHeight="3" markerWidth="3" orient="auto" refX="1.5" refY="1.5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"><use xlink:href="#raphael-marker-block" transform="rotate(180 1.5 1.5) scale(0.6,0.6)" stroke-width="1.6667" fill="black" stroke="none" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></use></marker></defs><rect x="0" y="0" width="625.125" height="36" rx="0" ry="0" fill="#ffffff" stroke="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" stroke-width="3" class="flowchart" id="op2" transform="matrix(1,0,0,1,54.6797,661.1953)"></rect><text x="10" y="18" text-anchor="start" font-family="&quot;Arial&quot;" font-size="14px" stroke="none" fill="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: Arial; font-size: 14px;" id="op2t" class="flowchartt" transform="matrix(1,0,0,1,54.6797,661.1953)" stroke-width="1"><tspan dy="5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">from base import alphabet, input_for_cipher_short, input_for_cipher_long, output_from_decrypted</tspan></text><rect x="0" y="0" width="511.09375" height="1346.390625" rx="0" ry="0" fill="#ffffff" stroke="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" stroke-width="3" class="flowchart" id="op4" transform="matrix(1,0,0,1,111.6953,753.1953)"></rect><text x="10" y="673.1953125" text-anchor="start" font-family="&quot;Arial&quot;" font-size="14px" stroke="none" fill="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: Arial; font-size: 14px;" id="op4t" class="flowchartt" transform="matrix(1,0,0,1,111.6953,753.1953)" stroke-width="1"><tspan dy="-650.1875" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">class Cardan(object):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">    def __init__(self, size, spaces):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        self.size = int(size)</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        str1 = ''</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        for i in range(len(spaces)):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">            str1 = ((str1 + str(spaces[i][0])) + str(spaces[i][1]))</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        self.spaces = str1</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        matrix_spaces = []</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        i = 0</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        cont = 0</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        while (i &lt; ((self.size * self.size) // 4)):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">            t = (int(self.spaces[cont]), int(self.spaces[(cont + 1)]))</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">            cont = (cont + 2)</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">            i = (i + 1)</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">            matrix_spaces.append(t)</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        self.spaces = matrix_spaces</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">    def code(self, message):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        offset = 0</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        cipher_text = ''</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        matrix = []</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        for i in range(((self.size * 2) - 1)):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">            matrix.append([])</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">            for j in range(self.size):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                matrix[i].append(None)</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        whitesneeded = ((self.size * self.size) - (len(message) % (self.size * self.size)))</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        if ((len(message) % (self.size * self.size)) != 0):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">            for h in range(whitesneeded):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                message = (message + ' ')</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        while (offset &lt; len(message)):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">            self.spaces.sort()</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">            for i in range(int(((self.size * self.size) // 4))):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                xy = self.spaces[i]</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                x = xy[0]</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                y = xy[1]</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                matrix[x][y] = message[offset]</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                offset = (offset + 1)</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">            if ((offset % (self.size * self.size)) == 0):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                for i in range(self.size):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                    for j in range(self.size):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                        try:</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                            cipher_text = (cipher_text + matrix[i][j])</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                        except:</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                            pass</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">            for i in range(((self.size * self.size) // 4)):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                x = ((self.size - 1) - self.spaces[i][1])</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                y = self.spaces[i][0]</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                self.spaces[i] = (x, y)</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        return cipher_text</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">    def decode(self, message, size):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        uncipher_text = ''</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        offset = 0</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        matrix = []</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        for i in range(((self.size * 2) - 1)):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">            matrix.append([])</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">            for j in range(self.size):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                matrix[i].append(None)</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        whitesneeded = ((self.size * self.size) - (len(message) % (self.size * self.size)))</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        if ((len(message) % (self.size * self.size)) != 0):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">            for h in range(whitesneeded):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                message = (message + ' ')</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        offsetmsg = (len(message) - 1)</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        while (offset &lt; len(message)):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">            if ((offset % (self.size * self.size)) == 0):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                for i in reversed(list(range(self.size))):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                    for j in reversed(list(range(self.size))):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                        matrix[i][j] = message[offsetmsg]</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                        offsetmsg = (offsetmsg - 1)</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">            for i in reversed(list(range(((self.size * self.size) // 4)))):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                x = self.spaces[i][1]</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                y = ((self.size - 1) - self.spaces[i][0])</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                self.spaces[i] = (x, y)</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">            self.spaces.sort(reverse=True)</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">            for i in range(((self.size * self.size) // 4)):</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                xy = self.spaces[i]</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                x = xy[0]</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                y = xy[1]</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                uncipher_text = (matrix[x][y] + uncipher_text)</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">                offset = (offset + 1)</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">        return uncipher_text</tspan></text><rect x="0" y="0" width="714.703125" height="36" rx="0" ry="0" fill="#ffffff" stroke="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" stroke-width="3" class="flowchart" id="op6" transform="matrix(1,0,0,1,9.8906,2810.7813)"></rect><text x="10" y="18" text-anchor="start" font-family="&quot;Arial&quot;" font-size="14px" stroke="none" fill="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: Arial; font-size: 14px;" id="op6t" class="flowchartt" transform="matrix(1,0,0,1,9.8906,2810.7813)" stroke-width="1"><tspan dy="5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">gaps = [(7, 7), (6, 0), (5, 0), (4, 0), (7, 1), (1, 1), (1, 2), (4, 1), (7, 2), (2, 1), (2, 5), (2, 3), (7, 3), (3, 1), (3, 2), (3, 4)]</tspan></text><rect x="0" y="0" width="143.109375" height="36" rx="0" ry="0" fill="#ffffff" stroke="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" stroke-width="3" class="flowchart" id="op8" transform="matrix(1,0,0,1,295.6875,3557.9766)"></rect><text x="10" y="18" text-anchor="start" font-family="&quot;Arial&quot;" font-size="14px" stroke="none" fill="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: Arial; font-size: 14px;" id="op8t" class="flowchartt" transform="matrix(1,0,0,1,295.6875,3557.9766)" stroke-width="1"><tspan dy="5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">r = Cardan(8, gaps)</tspan></text><rect x="0" y="0" width="216.265625" height="36" rx="0" ry="0" fill="#ffffff" stroke="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" stroke-width="3" class="flowchart" id="op10" transform="matrix(1,0,0,1,259.1094,4305.1719)"></rect><text x="10" y="18" text-anchor="start" font-family="&quot;Arial&quot;" font-size="14px" stroke="none" fill="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: Arial; font-size: 14px;" id="op10t" class="flowchartt" transform="matrix(1,0,0,1,259.1094,4305.1719)" stroke-width="1"><tspan dy="5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">texto = input_for_cipher_short()</tspan></text><rect x="0" y="0" width="103.4375" height="36" rx="0" ry="0" fill="#ffffff" stroke="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" stroke-width="3" class="flowchart" id="op12" transform="matrix(1,0,0,1,315.5234,5052.3672)"></rect><text x="10" y="18" text-anchor="start" font-family="&quot;Arial&quot;" font-size="14px" stroke="none" fill="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: Arial; font-size: 14px;" id="op12t" class="flowchartt" transform="matrix(1,0,0,1,315.5234,5052.3672)" stroke-width="1"><tspan dy="5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">n = len(texto)</tspan></text><rect x="0" y="0" width="168.8125" height="36" rx="0" ry="0" fill="#ffffff" stroke="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" stroke-width="3" class="flowchart" id="op14" transform="matrix(1,0,0,1,282.8359,5799.5625)"></rect><text x="10" y="18" text-anchor="start" font-family="&quot;Arial&quot;" font-size="14px" stroke="none" fill="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: Arial; font-size: 14px;" id="op14t" class="flowchartt" transform="matrix(1,0,0,1,282.8359,5799.5625)" stroke-width="1"><tspan dy="5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">encoded = r.code(texto)</tspan></text><rect x="0" y="0" width="223.3125" height="36" rx="0" ry="0" fill="#ffffff" stroke="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" stroke-width="3" class="flowchart" id="op16" transform="matrix(1,0,0,1,255.5859,6546.7578)"></rect><text x="10" y="18" text-anchor="start" font-family="&quot;Arial&quot;" font-size="14px" stroke="none" fill="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: Arial; font-size: 14px;" id="op16t" class="flowchartt" transform="matrix(1,0,0,1,255.5859,6546.7578)" stroke-width="1"><tspan dy="5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">decoded = r.decode(encoded, n)</tspan></text><rect x="0" y="0" width="722.484375" height="36" rx="0" ry="0" fill="#ffffff" stroke="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" stroke-width="3" class="flowchart" id="op18" transform="matrix(1,0,0,1,6,7293.9531)"></rect><text x="10" y="18" text-anchor="start" font-family="&quot;Arial&quot;" font-size="14px" stroke="none" fill="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: Arial; font-size: 14px;" id="op18t" class="flowchartt" transform="matrix(1,0,0,1,6,7293.9531)" stroke-width="1"><tspan dy="5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">gaps2 = [(7, 7), (6, 0), (5, 0), (4, 0), (7, 1), (1, 1), (1, 2), (4, 1), (7, 2), (2, 1), (2, 5), (2, 3), (7, 3), (3, 1), (3, 2), (3, 4)]</tspan></text><rect x="0" y="0" width="150.90625" height="36" rx="0" ry="0" fill="#ffffff" stroke="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" stroke-width="3" class="flowchart" id="op20" transform="matrix(1,0,0,1,291.7891,8041.1484)"></rect><text x="10" y="18" text-anchor="start" font-family="&quot;Arial&quot;" font-size="14px" stroke="none" fill="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: Arial; font-size: 14px;" id="op20t" class="flowchartt" transform="matrix(1,0,0,1,291.7891,8041.1484)" stroke-width="1"><tspan dy="5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">r2 = Cardan(8, gaps)</tspan></text><rect x="0" y="0" width="245.875" height="36" rx="0" ry="0" fill="#ffffff" stroke="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" stroke-width="3" class="flowchart" id="op22" transform="matrix(1,0,0,1,244.3047,8788.3438)"></rect><text x="10" y="18" text-anchor="start" font-family="&quot;Arial&quot;" font-size="14px" stroke="none" fill="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: Arial; font-size: 14px;" id="op22t" class="flowchartt" transform="matrix(1,0,0,1,244.3047,8788.3438)" stroke-width="1"><tspan dy="5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">texto_long = input_for_cipher_long()</tspan></text><rect x="0" y="0" width="137.6875" height="36" rx="0" ry="0" fill="#ffffff" stroke="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" stroke-width="3" class="flowchart" id="op24" transform="matrix(1,0,0,1,298.3984,9535.5391)"></rect><text x="10" y="18" text-anchor="start" font-family="&quot;Arial&quot;" font-size="14px" stroke="none" fill="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: Arial; font-size: 14px;" id="op24t" class="flowchartt" transform="matrix(1,0,0,1,298.3984,9535.5391)" stroke-width="1"><tspan dy="5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">n = len(texto_long)</tspan></text><rect x="0" y="0" width="245.890625" height="36" rx="0" ry="0" fill="#ffffff" stroke="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" stroke-width="3" class="flowchart" id="op26" transform="matrix(1,0,0,1,244.2969,10282.7344)"></rect><text x="10" y="18" text-anchor="start" font-family="&quot;Arial&quot;" font-size="14px" stroke="none" fill="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: Arial; font-size: 14px;" id="op26t" class="flowchartt" transform="matrix(1,0,0,1,244.2969,10282.7344)" stroke-width="1"><tspan dy="5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">encoded_long = r2.code(texto_long)</tspan></text><rect x="0" y="0" width="300.390625" height="36" rx="0" ry="0" fill="#ffffff" stroke="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" stroke-width="3" class="flowchart" id="op28" transform="matrix(1,0,0,1,217.0469,11029.9297)"></rect><text x="10" y="18" text-anchor="start" font-family="&quot;Arial&quot;" font-size="14px" stroke="none" fill="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: Arial; font-size: 14px;" id="op28t" class="flowchartt" transform="matrix(1,0,0,1,217.0469,11029.9297)" stroke-width="1"><tspan dy="5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">decoded_long = r2.decode(encoded_long, n)</tspan></text><rect x="0" y="0" width="82.671875" height="36" rx="20" ry="20" fill="#ffffff" stroke="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" stroke-width="3" class="flowchart" id="st31" transform="matrix(1,0,0,1,325.9063,11777.125)"></rect><text x="10" y="18" text-anchor="start" font-family="&quot;Arial&quot;" font-size="14px" stroke="none" fill="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: Arial; font-size: 14px;" id="st31t" class="flowchartt" transform="matrix(1,0,0,1,325.9063,11777.125)" stroke-width="1"><tspan dy="5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">start main</tspan></text><path fill="#ffffff" stroke="#000000" d="M10,18L0,36L75.34375,36L95.34375,0L20,0L10,18" stroke-width="3" id="io33" class="flowchart" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" transform="matrix(1,0,0,1,319.5703,12524.3203)"></path><text x="30" y="18" text-anchor="start" font-family="&quot;Arial&quot;" font-size="14px" stroke="none" fill="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: Arial; font-size: 14px;" id="io33t" class="flowchartt" transform="matrix(1,0,0,1,319.5703,12524.3203)" stroke-width="1"><tspan dy="5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">input: </tspan></text><rect x="0" y="0" width="296.828125" height="304.796875" rx="0" ry="0" fill="#ffffff" stroke="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" stroke-width="3" class="flowchart" id="sub36" transform="matrix(1,0,0,1,218.8281,13137.1172)"></rect><rect x="10" y="0" width="276.828125" height="304.796875" rx="0" ry="0" fill="#ffffff" stroke="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" stroke-width="3" id="sub36i" transform="matrix(1,0,0,1,218.8281,13137.1172)"></rect><text x="20" y="152.3984375" text-anchor="start" font-family="&quot;Arial&quot;" font-size="14px" stroke="none" fill="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: Arial; font-size: 14px;" id="sub36t" class="flowchartt" transform="matrix(1,0,0,1,218.8281,13137.1172)" stroke-width="1"><tspan dy="-129.390625" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">print(f'''</tspan><tspan dy="16.8" x="20" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">    Ð ÐµÑÐµÑÐºÐ° ÐÐ°ÑÐ´Ð°Ð½Ð¾:</tspan><tspan dy="16.8" x="20" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">    ÐÐ»ÑÑ: {gaps}</tspan><tspan dy="16.8" x="20" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">    ÐÐÐ ÐÐ¢ÐÐÐ Ð¢ÐÐÐ¡Ð¢:</tspan><tspan dy="16.8" x="20" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">    ÐÐ°ÑÐ¸ÑÑÐ¾Ð²Ð°Ð½Ð½ÑÐ¹ ÑÐµÐºÑÑ:</tspan><tspan dy="16.8" x="20" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">    {encoded.replace(' ', '')}</tspan><tspan dy="16.8" x="20" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">    </tspan><tspan dy="16.8" x="20" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">    Ð Ð°ÑÑÐ¸ÑÑÐ¾Ð²Ð°Ð½Ð½ÑÐ¹ ÑÐµÐºÑÑ:</tspan><tspan dy="16.8" x="20" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">    {output_from_decrypted(decoded)}</tspan><tspan dy="16.8" x="20" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">    </tspan><tspan dy="16.8" x="20" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">    ÐÐÐÐÐÐ«Ð Ð¢ÐÐÐ¡Ð¢:</tspan><tspan dy="16.8" x="20" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">    ÐÐ°ÑÐ¸ÑÑÐ¾Ð²Ð°Ð½Ð½ÑÐ¹ ÑÐµÐºÑÑ:</tspan><tspan dy="16.8" x="20" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">    {encoded_long}</tspan><tspan dy="16.8" x="20" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">    </tspan><tspan dy="16.8" x="20" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">    Ð Ð°ÑÑÐ¸ÑÑÐ¾Ð²Ð°Ð½Ð½ÑÐ¹ ÑÐµÐºÑÑ:</tspan><tspan dy="16.8" x="20" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">    {output_from_decrypted(decoded_long)}</tspan><tspan dy="16.8" x="20" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">    ''')</tspan></text><rect x="0" y="0" width="78.796875" height="36" rx="20" ry="20" fill="#ffffff" stroke="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" stroke-width="3" class="flowchart" id="e38" transform="matrix(1,0,0,1,327.8438,14153.1094)"></rect><text x="10" y="18" text-anchor="start" font-family="&quot;Arial&quot;" font-size="14px" stroke="none" fill="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: Arial; font-size: 14px;" id="e38t" class="flowchartt" transform="matrix(1,0,0,1,327.8438,14153.1094)" stroke-width="1"><tspan dy="5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">end main</tspan></text><rect x="0" y="0" width="242.234375" height="36" rx="0" ry="0" fill="#ffffff" stroke="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" stroke-width="3" class="flowchart" id="cond42" transform="matrix(1,0,0,1,246.125,14900.3047)"></rect><text x="10" y="18" text-anchor="start" font-family="&quot;Arial&quot;" font-size="14px" stroke="none" fill="#000000" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0); text-anchor: start; font-family: Arial; font-size: 14px;" id="cond42t" class="flowchartt" transform="matrix(1,0,0,1,246.125,14900.3047)" stroke-width="1"><tspan dy="5" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);">main() if  (__name__ == '__main__')</tspan><tspan dy="16.8" x="10" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></tspan></text><path fill="none" stroke="#000000" d="M367.2421875,697.1953125C367.2421875,697.1953125,367.2421875,735.39608335495,367.2421875,748.6954728176352" stroke-width="3" marker-end="url(#raphael-marker-endblock33-obj39)" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="none" stroke="#000000" d="M367.2421875,2099.5859375C367.2421875,2099.5859375,367.2421875,2746.0004022237845,367.2421875,2806.286126228786" stroke-width="3" marker-end="url(#raphael-marker-endblock33-obj40)" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="none" stroke="#000000" d="M367.2421875,2846.78125C367.2421875,2846.78125,367.2421875,3493.1957147237845,367.2421875,3553.4814387287856" stroke-width="3" marker-end="url(#raphael-marker-endblock33-obj41)" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="none" stroke="#000000" d="M367.2421875,3593.9765625C367.2421875,3593.9765625,367.2421875,4240.3910272237845,367.2421875,4300.676751228786" stroke-width="3" marker-end="url(#raphael-marker-endblock33-obj42)" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="none" stroke="#000000" d="M367.2421875,4341.171875C367.2421875,4341.171875,367.2421875,4987.5863397237845,367.2421875,5047.872063728786" stroke-width="3" marker-end="url(#raphael-marker-endblock33-obj43)" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="none" stroke="#000000" d="M367.2421875,5088.3671875C367.2421875,5088.3671875,367.2421875,5734.7816522237845,367.2421875,5795.067376228786" stroke-width="3" marker-end="url(#raphael-marker-endblock33-obj44)" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="none" stroke="#000000" d="M367.2421875,5835.5625C367.2421875,5835.5625,367.2421875,6481.9769647237845,367.2421875,6542.262688728786" stroke-width="3" marker-end="url(#raphael-marker-endblock33-obj45)" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="none" stroke="#000000" d="M367.2421875,6582.7578125C367.2421875,6582.7578125,367.2421875,7229.1722772237845,367.2421875,7289.458001228786" stroke-width="3" marker-end="url(#raphael-marker-endblock33-obj46)" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="none" stroke="#000000" d="M367.2421875,7329.953125C367.2421875,7329.953125,367.2421875,7976.3675897237845,367.2421875,8036.653313728786" stroke-width="3" marker-end="url(#raphael-marker-endblock33-obj47)" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="none" stroke="#000000" d="M367.2421875,8077.1484375C367.2421875,8077.1484375,367.2421875,8723.562902223784,367.2421875,8783.848626228786" stroke-width="3" marker-end="url(#raphael-marker-endblock33-obj48)" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="none" stroke="#000000" d="M367.2421875,8824.34375C367.2421875,8824.34375,367.2421875,9470.758214723784,367.2421875,9531.043938728784" stroke-width="3" marker-end="url(#raphael-marker-endblock33-obj49)" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="none" stroke="#000000" d="M367.2421875,9571.5390625C367.2421875,9571.5390625,367.2421875,10217.953527223784,367.2421875,10278.239251228786" stroke-width="3" marker-end="url(#raphael-marker-endblock33-obj50)" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="none" stroke="#000000" d="M367.2421875,10318.734375C367.2421875,10318.734375,367.2421875,10965.148839723784,367.2421875,11025.434563728784" stroke-width="3" marker-end="url(#raphael-marker-endblock33-obj51)" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="none" stroke="#000000" d="M367.2421875,11065.9296875C367.2421875,11065.9296875,367.2421875,11712.344152223784,367.2421875,11772.629876228786" stroke-width="3" marker-end="url(#raphael-marker-endblock33-obj52)" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="none" stroke="#000000" d="M367.2421875,11813.125C367.2421875,11813.125,367.2421875,12459.539464723784,367.2421875,12519.825188728786" stroke-width="3" marker-end="url(#raphael-marker-endblock33-obj53)" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="none" stroke="#000000" d="M367.2421875,12560.3203125C367.2421875,12560.3203125,367.2421875,13078.821340554161,367.2421875,13132.62088570138" stroke-width="3" marker-end="url(#raphael-marker-endblock33-obj54)" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="none" stroke="#000000" d="M367.2421875,13441.9140625C367.2421875,13441.9140625,367.2421875,14088.328527223784,367.2421875,14148.614251228786" stroke-width="3" marker-end="url(#raphael-marker-endblock33-obj55)" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path><path fill="none" stroke="#000000" d="M367.2421875,14189.109375C367.2421875,14189.109375,367.2421875,14835.523839723784,367.2421875,14895.809563728784" stroke-width="3" marker-end="url(#raphael-marker-endblock33-obj56)" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>